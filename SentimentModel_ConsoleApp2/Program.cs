
// This file was auto-generated by ML.NET Model Builder. 
using Microsoft.VisualBasic.FileIO;
using System;

namespace SentimentModel_ConsoleApp2
{
    class Program
    {
        static void Main(string[] args,int gScore = 55)
        {
            Console.WriteLine("Initializing please wait\n");
            //Form1 frm = new();
            //frm.ShowDialog();
            if (args.GetLength(0) > 0)
            {
                if (FileSystem.DirectoryExists($"{args[0]}"))
                {
                    if (System.Windows.Forms.MessageBox.Show($"Sort Directory? {args[0]}", "Smart-Sort", System.Windows.Forms.MessageBoxButtons.OKCancel) == System.Windows.Forms.DialogResult.OK)
                    {
                        Console.WriteLine("Sorting Directory: " + args[0].ToString() + "\n");
                        foreach (var item in FileSystem.GetFiles($"{args[0]}"))
                        {
                            //Console.WriteLine(item.Replace(FileSystem.GetParentPath(item) + "\\", "") + "\n");
                            SentimentModel.ModelInput sampleData = new()
                            {
                                ImageSource = @item.ToString(),
                            };
                            var predictionResult = SentimentModel.Predict(sampleData);
                            var scoreStr = 0;
                            if (predictionResult.Prediction == "Darby")
                            {
                                scoreStr = 0;
                            }
                            else if (predictionResult.Prediction == "David")
                            {
                                scoreStr = 1;
                            }
                            else if (predictionResult.Prediction == "family")
                            {
                                scoreStr = 2;
                            }
                            else if (predictionResult.Prediction == "Katelyn")
                            {
                                scoreStr = 3;
                            }
                            else if (predictionResult.Prediction == "Katrina")
                            {
                                scoreStr = 4;
                            }
                            else if (predictionResult.Prediction == "other")
                            {
                                scoreStr = 5;
                            }
                            else if (predictionResult.Prediction == "Sheena")
                            {
                                scoreStr = 6;
                            }
                            int scr = (int)((predictionResult.Score[scoreStr] * 100));
                            Console.WriteLine("\nImage: " + item.Replace(FileSystem.GetParentPath(item) + "\\", "") + "\n");
                            Console.WriteLine($"Predicted Label value: {predictionResult.Prediction} \n{scr}%\n{predictionResult.Score[scoreStr]}\nPredicted Label scores: [{String.Join(",", predictionResult.Score)}]\n\n");
                            if (predictionResult.Prediction != "other")
                            {
                                if (scr > gScore)
                                {
                                    if (!FileSystem.DirectoryExists($"{args[0]}\\PictureSort"))
                                    {
                                        Console.WriteLine($"Creating Directory: {args[0]}\\PictureSort\n");
                                        FileSystem.CreateDirectory($"{args[0]}\\PictureSort");
                                    }
                                    if (!FileSystem.DirectoryExists($"{args[0]}\\PictureSort\\{predictionResult.Prediction}"))
                                    {
                                        Console.WriteLine($"Creating Directory: {args[0]}\\PictureSort\\{predictionResult.Prediction}\n");
                                        FileSystem.CreateDirectory($"{args[0]}\\PictureSort\\{predictionResult.Prediction}");
                                    }
                                    Console.WriteLine($"Moving {item} to {args[0]}\\PictureSort\\{predictionResult.Prediction}\\{item.Replace(FileSystem.GetParentPath(item) + "\\", "")}\n");
                                    FileSystem.MoveFile(item.ToString(), $"{args[0]}\\PictureSort\\{predictionResult.Prediction}\\{item.Replace(FileSystem.GetParentPath(item) + "\\", "")}");
                                }
                            }
                        }
                    }
                }
            }
            else
            {
                if (System.Windows.Forms.MessageBox.Show($"Sort Directory? {Environment.GetFolderPath(Environment.SpecialFolder.MyPictures)}\\PictureSort", "Smart-Sort", System.Windows.Forms.MessageBoxButtons.OKCancel) == System.Windows.Forms.DialogResult.OK)
                {
                    Console.WriteLine($"Sorting Directory: {Environment.GetFolderPath(Environment.SpecialFolder.MyPictures)}\\PictureSort\n");
                    foreach (var item in FileSystem.GetFiles($"{Environment.GetFolderPath(Environment.SpecialFolder.MyPictures)}\\PictureSort"))
                    {
                        //Console.ReadKey();
                        //}
                        //var x = 1;
                        //while (x < 5)
                        //{
                        // Create single instance of sample data from first line of dataset for model input
                        SentimentModel.ModelInput sampleData = new()
                        {
                            //ImageSource = @"E:\Users\ToReMeTaL\Pictures\Pictures\Kat1\image (" + x.ToString() + ").jpg",
                            ImageSource = @item.ToString(),
                        };
                        // Make a single prediction on the sample data and print results
                        var predictionResult = SentimentModel.Predict(sampleData);
                        var scoreStr = 0;
                        if (predictionResult.Prediction == "Darby")
                        {
                            scoreStr = 0;
                        }
                        else if (predictionResult.Prediction == "David")
                        {
                            scoreStr = 1;
                        }
                        else if (predictionResult.Prediction == "family")
                        {
                            scoreStr = 2;
                        }
                        else if (predictionResult.Prediction == "Katelyn")
                        {
                            scoreStr = 3;
                        }
                        else if (predictionResult.Prediction == "Katrina")
                        {
                            scoreStr = 4;
                        }
                        else if (predictionResult.Prediction == "other")
                        {
                            scoreStr = 5;
                        }
                        else if (predictionResult.Prediction == "Sheena")
                        {
                            scoreStr = 6;
                        }
                        int scr = (int)((predictionResult.Score[scoreStr] * 100));
                        Console.WriteLine("\nImage: " + item.Replace(FileSystem.GetParentPath(item) + "\\", "") + "\n");
                        Console.WriteLine($"Predicted Label value: {predictionResult.Prediction} \n{scr}%\n{predictionResult.Score[scoreStr]}\nPredicted Label scores: [{String.Join(",", predictionResult.Score)}]\n\n");
                        if (predictionResult.Prediction != "other")
                        {
                            if (scr > gScore)
                            {
                                if (!FileSystem.DirectoryExists($"{Environment.GetFolderPath(Environment.SpecialFolder.MyPictures)}\\PictureSort"))
                                {
                                    Console.WriteLine($"Creating Directory: {Environment.GetFolderPath(Environment.SpecialFolder.MyPictures)}\\PictureSort\n");
                                    FileSystem.CreateDirectory($"{Environment.GetFolderPath(Environment.SpecialFolder.MyPictures)}\\PictureSort");
                                }
                                if (!FileSystem.DirectoryExists($"{Environment.GetFolderPath(Environment.SpecialFolder.MyPictures)}\\PictureSort\\{predictionResult.Prediction}"))
                                {
                                    Console.WriteLine($"Creating Directory: {Environment.GetFolderPath(Environment.SpecialFolder.MyPictures)}\\PictureSort\\{predictionResult.Prediction}\n");
                                    FileSystem.CreateDirectory($"{Environment.GetFolderPath(Environment.SpecialFolder.MyPictures)}\\PictureSort\\{predictionResult.Prediction}");
                                }
                                Console.WriteLine($"{Environment.GetFolderPath(Environment.SpecialFolder.MyPictures)}\\PictureSort\\{predictionResult.Prediction}\\{item.Replace(FileSystem.GetParentPath(item) + "\\", "")}\n");
                                FileSystem.MoveFile(item.ToString(), $"{Environment.GetFolderPath(Environment.SpecialFolder.MyPictures)}\\PictureSort\\{predictionResult.Prediction}\\{item.Replace(FileSystem.GetParentPath(item) + "\\", "")}");
                            }
                        }
                        //Console.ReadKey();
                        //x++;
                    }
                };
            }
            //Console.WriteLine("Retrain? (y) or Press any key to close this window . . .");
            //if (Console.ReadKey(true).KeyChar == 'y') {
            //    Console.WriteLine("Retraining:\n");
            //};
            Console.WriteLine("\nSort Complete!\nPress any key to close this window . . .");
            System.Windows.Forms.MessageBox.Show("Sort Complete!", "Smart-Sort", System.Windows.Forms.MessageBoxButtons.OK);
            //Console.ReadKey();
        }
    }
}
